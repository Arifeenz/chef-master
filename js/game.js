/* ===============================
   ‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡πÄ‡∏ß‡∏• (1 ‚Üí 5 ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö)
================================= */
const recipes = {
  // ====== ‡πÄ‡∏•‡πÄ‡∏ß‡∏• 1: ‡∏á‡πà‡∏≤‡∏¢‡∏™‡∏∏‡∏î (1 ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö) ======
  'ü•• ‡∏ô‡πâ‡∏≥‡∏Å‡∏∞‡∏ó‡∏¥': ['ü•• ‡∏Å‡∏∞‡∏ó‡∏¥'],
  'üçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏≠‡∏°': ['üçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏≠‡∏°'],
  'üçå ‡∏Å‡∏•‡πâ‡∏ß‡∏¢‡∏´‡∏¥‡∏ô': ['üçå ‡∏Å‡∏•‡πâ‡∏ß‡∏¢‡∏´‡∏¥‡∏ô'],

  // ====== ‡πÄ‡∏•‡πÄ‡∏ß‡∏• 2: ‡∏á‡πà‡∏≤‡∏¢ (2 ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö) ======
  'üçó ‡πÑ‡∏Å‡πà‡∏Å‡∏≠‡πÅ‡∏•‡∏∞': ['üçó ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà','üå∂Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏Å‡∏á‡πÉ‡∏ï‡πâ'],
  'ü•ö ‡πÑ‡∏Ç‡πà‡∏ï‡πâ‡∏°': ['ü•ö ‡πÑ‡∏Ç‡πà','ü•¢ ‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß'],
  'üç≥ ‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß': ['ü•ö ‡πÑ‡∏Ç‡πà','üõ¢Ô∏è ‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô'],

  // ====== ‡πÄ‡∏•‡πÄ‡∏ß‡∏• 3: ‡∏á‡πà‡∏≤‡∏¢‚Äì‡∏Å‡∏•‡∏≤‡∏á (3 ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö) ======
  'üçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏¢‡∏≥‡∏õ‡∏±‡∏Å‡∏©‡πå‡πÉ‡∏ï‡πâ': ['üçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏≠‡∏°','üåø ‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£‡∏ã‡∏≠‡∏¢','üêü ‡∏ô‡πâ‡∏≥‡∏ö‡∏π‡∏î‡∏π'],
  'ü•ó ‡∏™‡πâ‡∏°‡∏ï‡∏≥': ['ü•í ‡∏°‡∏∞‡∏•‡∏∞‡∏Å‡∏≠','üåø ‡∏ñ‡∏±‡πà‡∏ß‡∏ù‡∏±‡∏Å‡∏¢‡∏≤‡∏ß','üå∂Ô∏è ‡∏û‡∏£‡∏¥‡∏Å'],
  'üç§ ‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á': ['üçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏™‡∏ß‡∏¢','üç§ ‡∏Å‡∏∏‡πâ‡∏á','ü•ö ‡πÑ‡∏Ç‡πà'],

  // ====== ‡πÄ‡∏•‡πÄ‡∏ß‡∏• 4: ‡∏Å‡∏•‡∏≤‡∏á (4 ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö) ======
  'üçõ ‡πÅ‡∏Å‡∏á‡πÑ‡∏Å‡πà‡∏™‡∏∞‡∏ï‡∏≠': ['üçó ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà','üå± ‡∏™‡∏∞‡∏ï‡∏≠','ü•• ‡∏Å‡∏∞‡∏ó‡∏¥','üå∂Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏Å‡∏á‡πÉ‡∏ï‡πâ'],
  'üç§ ‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á': ['üç§ ‡∏Å‡∏∏‡πâ‡∏á','üåæ ‡∏ï‡∏∞‡πÑ‡∏Ñ‡∏£‡πâ','üçÉ ‡πÉ‡∏ö‡∏°‡∏∞‡∏Å‡∏£‡∏π‡∏î','üå∂Ô∏è ‡∏û‡∏£‡∏¥‡∏Å'],
  'üåø ‡∏ú‡∏±‡∏î‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡πÑ‡∏Å‡πà': ['üçó ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà','üåø ‡πÉ‡∏ö‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤','üå∂Ô∏è ‡∏û‡∏£‡∏¥‡∏Å','üßÑ ‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°'],

  // ====== ‡πÄ‡∏•‡πÄ‡∏ß‡∏• 5: ‡∏¢‡∏≤‡∏Å (5 ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö) ======
  'üç≤ ‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô': ['üçó ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà','ü•• ‡∏Å‡∏∞‡∏ó‡∏¥','üçÜ ‡∏°‡∏∞‡πÄ‡∏Ç‡∏∑‡∏≠','üå∂Ô∏è ‡∏û‡∏£‡∏¥‡∏Å‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß','üçÉ ‡πÉ‡∏ö‡∏°‡∏∞‡∏Å‡∏£‡∏π‡∏î'],
  'üêü ‡∏ã‡∏∏‡∏õ‡∏´‡∏±‡∏ß‡∏õ‡∏•‡∏≤': ['üêü ‡∏´‡∏±‡∏ß‡∏õ‡∏•‡∏≤','üåæ ‡∏Ç‡∏°‡∏¥‡πâ‡∏ô','üåæ ‡∏ï‡∏∞‡πÑ‡∏Ñ‡∏£‡πâ','üçã ‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß','üßÑ ‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°'],
  'üçõ ‡πÅ‡∏Å‡∏á‡∏™‡πâ‡∏°‡πÉ‡∏ï‡πâ': ['üêü ‡∏õ‡∏•‡∏≤','üåæ ‡∏Ç‡∏°‡∏¥‡πâ‡∏ô','ü•≠ ‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á‡∏î‡∏¥‡∏ö','üå∂Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏Å‡∏á‡πÉ‡∏ï‡πâ','ü•¨ ‡∏ú‡∏±‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô']
};

/* ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */
const allIngredients = [
  // ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô / ‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ
  'üçó ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÑ‡∏Å‡πà','ü•• ‡∏Å‡∏∞‡∏ó‡∏¥','üåæ ‡∏Ç‡∏°‡∏¥‡πâ‡∏ô','üå∂Ô∏è ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏Å‡∏á‡πÉ‡∏ï‡πâ',
  'üçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏≠‡∏°','üçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏™‡∏ß‡∏¢','üåø ‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£‡∏ã‡∏≠‡∏¢','üêü ‡∏ô‡πâ‡∏≥‡∏ö‡∏π‡∏î‡∏π','üå± ‡∏™‡∏∞‡∏ï‡∏≠',
  'üçå ‡∏Å‡∏•‡πâ‡∏ß‡∏¢‡∏´‡∏¥‡∏ô','üç§ ‡∏Å‡∏∏‡πâ‡∏á','üêü ‡∏õ‡∏•‡∏≤','üêü ‡∏´‡∏±‡∏ß‡∏õ‡∏•‡∏≤',

  // ‡∏ú‡∏±‡∏Å/‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£
  'üåø ‡πÉ‡∏ö‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤','üçÉ ‡πÉ‡∏ö‡∏°‡∏∞‡∏Å‡∏£‡∏π‡∏î','ü•¨ ‡∏ú‡∏±‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ö‡πâ‡∏≤‡∏ô','ü•í ‡∏°‡∏∞‡∏•‡∏∞‡∏Å‡∏≠',
  'üåø ‡∏ñ‡∏±‡πà‡∏ß‡∏ù‡∏±‡∏Å‡∏¢‡∏≤‡∏ß','üçÜ ‡∏°‡∏∞‡πÄ‡∏Ç‡∏∑‡∏≠','ü•≠ ‡∏°‡∏∞‡∏°‡πà‡∏ß‡∏á‡∏î‡∏¥‡∏ö',

  // ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∏‡∏á
  'üßÑ ‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°','üå∂Ô∏è ‡∏û‡∏£‡∏¥‡∏Å','üå∂Ô∏è ‡∏û‡∏£‡∏¥‡∏Å‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß','ü•¢ ‡∏ã‡∏µ‡∏≠‡∏¥‡πä‡∏ß','üõ¢Ô∏è ‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô',
  'üçã ‡∏ô‡πâ‡∏≥‡∏°‡∏∞‡∏ô‡∏≤‡∏ß',

  // ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
  'ü•ö ‡πÑ‡∏Ç‡πà'
];

/* ‡πÄ‡∏°‡∏ô‡∏π‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡πÄ‡∏ß‡∏• */
const menuByLevel = {
  1: ['ü•• ‡∏ô‡πâ‡∏≥‡∏Å‡∏∞‡∏ó‡∏¥','üçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏´‡∏≠‡∏°','üçå ‡∏Å‡∏•‡πâ‡∏ß‡∏¢‡∏´‡∏¥‡∏ô'],
  2: ['üçó ‡πÑ‡∏Å‡πà‡∏Å‡∏≠‡πÅ‡∏•‡∏∞','ü•ö ‡πÑ‡∏Ç‡πà‡∏ï‡πâ‡∏°','üç≥ ‡πÑ‡∏Ç‡πà‡∏î‡∏≤‡∏ß'],
  3: ['üçö ‡∏Ç‡πâ‡∏≤‡∏ß‡∏¢‡∏≥‡∏õ‡∏±‡∏Å‡∏©‡πå‡πÉ‡∏ï‡πâ','ü•ó ‡∏™‡πâ‡∏°‡∏ï‡∏≥','üç§ ‡∏Ç‡πâ‡∏≤‡∏ß‡∏ú‡∏±‡∏î‡∏Å‡∏∏‡πâ‡∏á'],
  4: ['üçõ ‡πÅ‡∏Å‡∏á‡πÑ‡∏Å‡πà‡∏™‡∏∞‡∏ï‡∏≠','üç§ ‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á','üåø ‡∏ú‡∏±‡∏î‡∏Å‡∏∞‡πÄ‡∏û‡∏£‡∏≤‡πÑ‡∏Å‡πà'],
  5: ['üç≤ ‡πÅ‡∏Å‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏´‡∏ß‡∏≤‡∏ô','üêü ‡∏ã‡∏∏‡∏õ‡∏´‡∏±‡∏ß‡∏õ‡∏•‡∏≤','üçõ ‡πÅ‡∏Å‡∏á‡∏™‡πâ‡∏°‡πÉ‡∏ï‡πâ']
};

/* ===============================
   State ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°
================================= */
let gameState = {
  fame: 0,
  coins: 100,
  recipes: menuByLevel[1].length,
  level: 1,
  currentOrder: null,
  selectedIngredients: [],
  timeLeft: 90,
  timer: null,
  unlockedRecipes: [...menuByLevel[1]]
};

/* ===============================
   ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢
================================= */
function shuffle(arr) {
  for (let i = arr.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [arr[i], arr[j]] = [arr[j], arr[i]];
  }
  return arr;
}

/* ===============================
   Flow ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°
================================= */
function startGame() {
  document.getElementById('start-screen').classList.add('hidden');
  document.getElementById('game-screen').classList.remove('hidden');
  generateOrder();
  createIngredients();
  startTimer();
  updateStats();
  updateLevelDisplay();
}

function generateOrder() {
  const availableMenus = menuByLevel[gameState.level] || menuByLevel[5];
  const randomMenu = availableMenus[Math.floor(Math.random() * availableMenus.length)];
  gameState.currentOrder = randomMenu;
  document.getElementById('order-dish').textContent = randomMenu;
}

function createIngredients() {
  const container = document.getElementById('ingredients');
  container.innerHTML = '';

  const requiredIngredients = recipes[gameState.currentOrder] || [];

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡∏•‡∏ß‡∏á
  const distractors = allIngredients.filter(i => !requiredIngredients.includes(i));
  const shuffledDistractors = shuffle(distractors).slice(0, 12 - requiredIngredients.length);

  // ‡∏£‡∏ß‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡πà‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö
  let finalIngredients = [...requiredIngredients, ...shuffledDistractors];
  finalIngredients = shuffle(finalIngredients);

  // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
  finalIngredients.forEach(ingredient => {
    const div = document.createElement('div');
    div.className = 'ingredient';
    const parts = ingredient.split(' ');
    const emoji = parts[0];
    const name = parts.slice(1).join(' ');
    div.innerHTML = `<div class="emoji">${emoji}</div><div class="name">${name}</div>`;
    div.onclick = () => selectIngredient(ingredient, div);
    container.appendChild(div);
  });
}

function selectIngredient(ingredient, element) {
  if (element.classList.contains('selected')) {
    element.classList.remove('selected');
    gameState.selectedIngredients = gameState.selectedIngredients.filter(i => i !== ingredient);
  } else {
    element.classList.add('selected');
    gameState.selectedIngredients.push(ingredient);
  }
  updateCookingArea();
  document.getElementById('cook-btn').disabled = gameState.selectedIngredients.length === 0;
}

function updateCookingArea() {
  const area = document.getElementById('cooking-area');
  if (gameState.selectedIngredients.length === 0) {
    area.textContent = 'üç≥ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£';
  } else {
    const emojis = gameState.selectedIngredients.map(ingredient => ingredient.split(' ')[0]);
    area.textContent = 'üî• ' + emojis.join(' + ');
  }
}

function resetIngredients() {
  gameState.selectedIngredients = [];
  document.querySelectorAll('.ingredient').forEach(el => el.classList.remove('selected'));
  updateCookingArea();
  document.getElementById('cook-btn').disabled = true;
}

function cookDish() {
  const requiredIngredients = recipes[gameState.currentOrder] || [];
  const hasAll = requiredIngredients.every(req => gameState.selectedIngredients.includes(req));
  clearInterval(gameState.timer);
  if (hasAll && gameState.selectedIngredients.length === requiredIngredients.length) {
    showResult(true);
  } else {
    showResult(false);
  }
}

function showResult(success) {
  document.getElementById('game-screen').classList.add('hidden');
  document.getElementById('result-screen').classList.remove('hidden');
  const resultContent = document.getElementById('result-content');

  if (success) {
    const reward = Math.floor(Math.random() * 50) + 30;
    gameState.fame += 10;
    gameState.coins += reward;
    gameState.level += 1;

    if (menuByLevel[gameState.level]) {
      gameState.unlockedRecipes = [
        ...new Set([...gameState.unlockedRecipes, ...menuByLevel[gameState.level]])
      ];
      gameState.recipes = gameState.unlockedRecipes.length;
    }

    resultContent.innerHTML = `
      <h2 class="success">üéâ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</h2>
      <p>‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏≥ ${gameState.currentOrder} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!</p>
      <p>+10 ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡πÅ‡∏•‡∏∞ +${reward} ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç</p>
    `;
  } else {
    const requiredIngredients = recipes[gameState.currentOrder] || [];
    resultContent.innerHTML = `
      <h2 class="error">üíî ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!</h2>
      <p>‡∏™‡∏π‡∏ï‡∏£ ${gameState.currentOrder} ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ:<br><strong>${requiredIngredients.join(' + ')}</strong></p>
    `;
  }

  updateStats();
}

function nextLevel() {
  document.getElementById('result-screen').classList.add('hidden');
  document.getElementById('game-screen').classList.remove('hidden');
  generateOrder();
  resetIngredients();
  createIngredients();

  if (gameState.level === 1) gameState.timeLeft = 90;
  else if (gameState.level === 2) gameState.timeLeft = 80;
  else if (gameState.level === 3) gameState.timeLeft = 70;
  else if (gameState.level === 4) gameState.timeLeft = 60;
  else gameState.timeLeft = 50;

  startTimer();
  updateLevelDisplay();
}

function viewRecipes() {
  document.getElementById('result-screen').classList.add('hidden');
  document.getElementById('recipe-screen').classList.remove('hidden');
  const recipeList = document.getElementById('recipe-list');
  recipeList.innerHTML = gameState.unlockedRecipes.map(r => `
    <div class="recipe-item">
      <strong>${r}</strong><br>
      ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö: ${recipes[r].join(', ')}
    </div>
  `).join('');
}

function backToGame() {
  document.getElementById('recipe-screen').classList.add('hidden');
  document.getElementById('result-screen').classList.remove('hidden');
}

function startTimer() {
  const timerElement = document.getElementById('timer');
  clearInterval(gameState.timer);
  gameState.timer = setInterval(() => {
    gameState.timeLeft -= 1;
    timerElement.textContent = `‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤: ${gameState.timeLeft} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`;
    if (gameState.timeLeft <= 0) {
      clearInterval(gameState.timer);
      showResult(false);
    }
  }, 1000);
}

function updateLevelDisplay() {
  const levelElement = document.getElementById('current-level');
  if (levelElement) {
    levelElement.textContent = gameState.level;
  }
}

function updateStats() {
  document.getElementById('fame').textContent = gameState.fame;
  document.getElementById('coins').textContent = gameState.coins;
  document.getElementById('recipes').textContent = gameState.recipes;
}

/* ===============================
   Tutorial System
================================= */
let currentTutorialStep = 0;

const tutorialSteps = [
  { title: "üéØ ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏°", content: "<p>‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡∏ó‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤</p>" },
  { title: "üìã ‡∏î‡∏π‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå", content: "<p>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö</p>" },
  { title: "üßÑ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö", content: "<p>‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ï‡∏≤‡∏°‡∏™‡∏π‡∏ï‡∏£</p>" },
  { title: "üî• ‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£", content: "<p>‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° '‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</p>" },
  { title: "‚è∞ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏•‡∏≤", content: "<p>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡∏°‡∏î!</p>" },
  { title: "üöÄ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏∏‡∏¢!", content: "<p>‡πÑ‡∏õ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ä‡∏ü Master ‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞!</p>" }
];

function showTutorial() {
  currentTutorialStep = 0;
  document.getElementById("tutorial-overlay").classList.remove("hidden");
  displayTutorialStep();
}

function skipTutorial() {
  document.getElementById("tutorial-overlay").classList.add("hidden");
}

function displayTutorialStep() {
  const step = tutorialSteps[currentTutorialStep];
  const content = document.getElementById("tutorial-content");
  content.innerHTML = `
    <h2>${step.title}</h2>
    <div>${step.content}</div>
    <div style="margin-top:20px;">
      ${currentTutorialStep > 0 ? '<button class="btn btn-secondary" onclick="previousTutorialStep()">‚Üê ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤</button>' : ''}
      ${currentTutorialStep < tutorialSteps.length - 1 ? 
        '<button class="btn btn-primary" onclick="nextTutorialStep()">‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ‚Üí</button>' : 
        '<button class="btn btn-success" onclick="finishTutorial()">üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°!</button>'}
    </div>
  `;
}

function nextTutorialStep() {
  if (currentTutorialStep < tutorialSteps.length - 1) {
    currentTutorialStep++;
    displayTutorialStep();
  }
}

function previousTutorialStep() {
  if (currentTutorialStep > 0) {
    currentTutorialStep--;
    displayTutorialStep();
  }
}

function finishTutorial() {
  document.getElementById("tutorial-overlay").classList.add("hidden");
  startGame();
}
